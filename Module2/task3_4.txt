#include<iostream>

using namespace std;

int partition(int* arr, int n)
{
    if (n == 1)
    {
        return 0;
    }
    int pivotnum = rand() % (n - 1);
    int pivot = arr[pivotnum];
    swap(arr[n - 1], arr[pivotnum]);
    int i = 0;
    int j = 0;
    while (j < n - 1)
    {
        if (arr[j] > pivot)
        {
            j++;
        }
        else
        {
            swap(arr[i++], arr[j++]);
        }
    }
    swap(arr[n - 1], arr[i]);
    return i;
}

void kordstatistic(int* arr, int n, int k)
{
    int p = partition(arr, n);
    while (k != p)
    {
        if (p > k)
        {
            n = p;
            p = partition(arr, n);
        }
        else
        {
            arr = arr + p + 1;
            n = n - p - 1;
            k = k - p - 1;
            p = partition(arr, n);
        }
    }
    cout << arr[k];
}

int main()
{
    int n, k;
    cin >> n >> k;
    int* arr = new int[n];
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    kordstatistic(arr, n, k);
    delete[] arr;
}
